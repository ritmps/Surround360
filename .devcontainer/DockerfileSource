FROM nvidia/cuda:11.3.1-cudnn8-devel-ubuntu16.04

# Install zsh
# RUN apt-get update && apt-get install -y zsh

# Set zsh as the default shell
# SHELL ["/usr/bin/zsh", "-c"]

# Set non-interactive mode for debconf
ARG DEBIAN_FRONTEND=noninteractive

# Preconfigure the keyboard settings
RUN echo 'keyboard-configuration keyboard-configuration/layout select "English (US)"' | debconf-set-selections
RUN echo 'keyboard-configuration keyboard-configuration/variant select "English (US)"' | debconf-set-selections

# Install necessary packages
RUN apt-get update && \
  apt-get install -y \
  keyboard-configuration \
  binutils-dev \
  build-essential \
  cmake \
  ffmpeg \
  gfortran \
  git \
  libatlas-base-dev \
  libboost-all-dev \
  libdouble-conversion-dev \
  libeigen3-dev \
  libevent-dev \
  libgflags-dev \
  libflann-dev \
  libfreeimage-dev \
  libcgal-qt5-dev \ 
  libgtest-dev \
  libsqlite3-dev \
  libglew-dev \
  qtbase5-dev \
  libqt5opengl5-dev \
  libcgal-dev \
  libceres-dev \
  libgoogle-glog-dev \
  libgtk-3-dev \
  libhdf5-dev \
  libiberty-dev \
  libjemalloc-dev \
  liblz4-dev \
  liblzma-dev \
  libmetis-dev \
  libopencv-dev \
  libopencv-dev \
  libprotobuf-dev \
  libsodium-dev \
  libssl-dev \
  libunwind8-dev \
  libzstd-dev \
  ninja-build \
  pkg-config \
  protobuf-compiler \
  python \
  python-pip \
  python-wxgtk3.0 \
  python-wxgtk3.0-dev \  
  wget \
  zlib1g-dev \
  nvidia-cuda-toolkit \
  && apt-get clean\
  && rm -rf /var/lib/apt/lists/*

  # Clone SuiteSparse repository at the desired tag
RUN git clone --branch v5.10.1 --depth 1 https://github.com/DrTimothyAldenDavis/SuiteSparse.git

# Build SuiteSparse from source
RUN cd SuiteSparse && \
    make library -j $(nproc) && \
    make install
  
# Install a newer version of CMake
RUN wget https://github.com/Kitware/CMake/releases/download/v3.16.9/cmake-3.16.9.tar.gz && \
  tar -xzvf cmake-3.16.9.tar.gz && \
  cd cmake-3.16.9 && \
  ./bootstrap && \
  make -j$(nproc) && \
  make install && \
  cd .. && rm -rf cmake-3.16.9 cmake-3.16.9.tar.gz

# Install a newer version of OpenSSL
RUN wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz && \
  tar -xzvf openssl-1.1.1g.tar.gz && \
  cd openssl-1.1.1g && \
  ./config && \
  make -j $(nproc) && \
  make install && \
  ldconfig && \
  cd .. && rm -rf openssl-1.1.1g openssl-1.1.1g.tar.gz

# Install fmt library version 5.0.0
RUN git clone https://github.com/fmtlib/fmt.git /fmt && \
  cd /fmt && \
  git checkout 5.0.0 && \
  mkdir build && cd build && \
  cmake .. && \
  make -j $(nproc) && \
  make install


# Install a newer version of zstd
RUN wget https://github.com/facebook/zstd/releases/download/v1.4.4/zstd-1.4.4.tar.gz && \
  tar -xzvf zstd-1.4.4.tar.gz && \
  cd zstd-1.4.4 && \
  make && \
  make install

# Install Folly
RUN git clone https://github.com/facebook/folly.git /folly && \
cd /folly && \
git checkout v2019.11.04.00 && \
# mkdir build && cd build && \
cd build && \
cmake .. && \
make -j $(nproc) && \
make install

# Install SuiteSparse from source
RUN wget http://faculty.cse.tamu.edu/davis/SuiteSparse/SuiteSparse-5.1.2.tar.gz && \
tar -xzvf SuiteSparse-5.1.2.tar.gz && \
cd SuiteSparse && \
make library -j $(nproc) && \
# make library  && \
make install

# # Build and install SuiteSparse components separately
# cd SuiteSparse && \
# cd SuiteSparse_config && \
# make  && \
# make install && \
# cd ../AMD && \
# make && \
# make install && \
# cd ../COLAMD && \
# make && \
# make install && \
# cd ../BTF && \
# make && \
# make install && \
# cd ../KLU && \
# make && \
# make install && \
# cd ../CHOLMOD && \
# make && \
# make install && \
# cd ../CCOLAMD && \
# make && \
# make install && \
# cd ../CAMD && \
# make && \
# make install && \
# cd ../UMFPACK && \
# make && \
# make install && \
# cd ../CXSparse && \
# make && \
# make install && \
# cd ../LDL && \
# make && \
# make install && \
# cd ../RBio && \
# make && \
# make install && \
# cd ../SPQR && \
# make && \
# make install && \
# cd ../GraphBLAS && \
# make && \
# make install

# Install Ceres Solver
RUN apt-get install -y \
  libgoogle-glog-dev \
  libatlas-base-dev

RUN git clone https://ceres-solver.googlesource.com/ceres-solver /ceres && \
  cd /ceres && \
  git checkout 85c6b5c && \
  mkdir build && cd build && \
  cmake .. && \
  make -j $(nproc) && \
  make install

# Install Gooey (Python package)
RUN  pip install wxPython==4.0.7.post2 Pillow==6.2.2 colored==1.3.93 Gooey==1.0.8.1

# Install Colmap
RUN git clone https://github.com/colmap/colmap /colmap && \
  cd /colmap && \
  mkdir build && cd build && \
  cmake .. -GNinja&& \
  ninja && \
  ninja install

WORKDIR /workspaces
COPY . /workspaces

